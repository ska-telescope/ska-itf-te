#!/usr/bin/env ansible-playbook
---

- name: "Update ssh keys"
  hosts:
    - all
  vars:
    add_ssh_keys: []
    remove_ssh_keys: []
    groups_to_add: "sudo"
    user_group: "norights" # this is the group our users are in on gaia
    ssh_key: ""
    user: ""

  tasks:

    - name: Add - Parse Variables
      tags:
        - addusers
        - addkeys
      ansible.builtin.set_fact:
        user: "{{ item.split()[-1] }}"
        ssh_key: "{{ item }}"
      with_items: "{{ add_ssh_keys }}"
      when: item.split()[-1] == ansible_facts['user_id']

    - name: Remove - Parse Variables
      tags:
        - removeusers
        - removekeys
      ansible.builtin.set_fact:
        user: "{{ item.split()[-1] }}"
        ssh_key: "{{ item }}"
      with_items: "{{ remove_ssh_keys }}"
      when: "item.split()[-1] == ansible_facts['user_id']"

    - name: Debug
      tags:
        - addusers
        - addkeys
        - removeusers
        - removekeys
      ansible.builtin.debug:
        msg: "Variables used: user = {{ user }}; ssh_key = {{ ssh_key }}"
        verbosity: 2

    - name: Create user
      become: true
      tags:
        - addusers
      block:
        - name: Create user account
          ansible.builtin.user:
            name: "{{ user }}"
            shell: /bin/bash
            groups: "{{ groups_to_add }}"
            append: true

        - name: Add to sudoers
          ansible.builtin.lineinfile:
            line: "{{ user }} ALL=(ALL) NOPASSWD:ALL"
            path: "/etc/sudoers.d/99-systems-team"
            regex: "{{ user }}"
            create: true
            owner: "root"
            group: "root"
            mode: "0440"

    - name: Add key
      tags:
        - addusers
        - addkeys
      block:
        - name: Create ~/.ssh/
          ansible.builtin.file:
            path: "/home/{{ user }}/.ssh"
            state: directory
            owner: "{{ user }}"
            group: "{{ user_group }}"
            mode: "0700"

        - name: Add to authorized_keys
          ansible.builtin.lineinfile:
            line: "{{ ssh_key }}"
            path: "/home/{{ user }}/.ssh/authorized_keys"
            regex: "{{  ssh_key.split()[1] | regex_escape() }}" # use the hash to match
            create: true
            owner: "{{ user }}"
            group: "{{ user_group }}"
            mode: "0600"

    - name: Remove users
      become: true
      tags:
        - removeusers
      block:
        - name: Remove user account
          ansible.builtin.user:
            name: "{{ user }}"
            state: absent

        - name: Remove from sudoers
          ansible.builtin.lineinfile:
            path: "/etc/sudoers.d/99-systems-team"
            regex: "{{ user }}"
            state: absent

    - name: Remove ssh key
      tags:
        - removekeys
      ansible.builtin.lineinfile:
        line: "{{ ssh_key }}"
        dest: "/home/{{ user }}/.ssh/authorized_keys"
        state: absent
