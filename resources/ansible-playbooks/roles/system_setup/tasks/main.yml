---
# Installation
- name: Get latest kubectl version
  uri:
    url: https://dl.k8s.io/release/stable.txt
    return_content: yes
  register: version

- name: Download the latest kubectl release
  uri:
    url: https://dl.k8s.io/release/{{ version.content }}/bin/linux/{{ arch }}/kubectl
    dest: /home/{{ ansible_user }}
  register: kubectl

- name: Download the kubectl checksum file
  uri:
    url: https://dl.k8s.io/{{ version.content }}/bin/linux/{{ arch }}/kubectl.sha256
    dest: /home/{{ ansible_user }}

- name: Download the kubectl checksum file
  uri:
    url: https://dl.k8s.io/{{ version.content }}/bin/linux/{{ arch }}/kubectl.sha256
    dest: /home/{{ ansible_user }}

- name: Validate the kubectl binary against the checksum file
  shell: echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
  register: result

- name: Assert that the kubectl binary is OK
  vars:
    expected: "kubectl: OK"
  assert:
    that:
      - result.stdout == expected
    fail_msg: "{{ result.stdout }}"
    success_msg: "{{ result.stdout }}"

- name: Move kubectl and change permissions
  become: true
  file:
    src: "{{ kubectl.path }}"
    dest: /usr/local/bin/kubectl
    state: hard
    owner: root
    group: root
    mode: "+x"

- name: Check if kubectl is installed
  shell: kubectl version --client
  register: client
  failed_when: client.rc > 1

# Directories
- name: Ensure shared directory exists
  ansible.builtin.file:
    path: "{{ shared_dir }}"
    state: directory
    owner: "root"
    group: "root"
    mode: "u=rwx,g=rx,o=rx"
  become: true

- name: Ensure shared common directory exists
  ansible.builtin.file:
    path: "{{ shared_common_dir }}"
    state: directory
    owner: "root"
    group: "root"
    mode: "u=rwx,g=rwx,o=rwx"
  become: true

- name: Ensure shared team directory exists
  ansible.builtin.file:
    path: "{{ shared_team_dir }}"
    state: directory
    owner: "root"
    group: "{{ team_group }}"
    mode: "u=rwx,g=rwx"
  become: true

- name: Ensure team config directory exists
  ansible.builtin.file:
    path: "{{ shared_team_config_dir }}"
    state: directory
    owner: "root"
    group: "{{ team_group }}"
    mode: "u=rwx,g=rwx"
  become: true
