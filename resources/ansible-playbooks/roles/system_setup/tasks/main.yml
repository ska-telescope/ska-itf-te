---
# Installation
- name: Install kubectl
  when: install_kubectl
  block:
    - name: Get latest kubectl version
      uri:
        url: https://dl.k8s.io/release/stable.txt
        return_content: yes
      register: version

    - name: Download the latest kubectl release
      uri:
        url: https://dl.k8s.io/release/{{ version.content }}/bin/linux/{{ arch }}/kubectl
        dest: /home/{{ ansible_user }}
      register: kubectl

    - name: Download the kubectl checksum file
      uri:
        url: https://dl.k8s.io/{{ version.content }}/bin/linux/{{ arch }}/kubectl.sha256
        dest: /home/{{ ansible_user }}

    - name: Download the kubectl checksum file
      uri:
        url: https://dl.k8s.io/{{ version.content }}/bin/linux/{{ arch }}/kubectl.sha256
        dest: /home/{{ ansible_user }}

    - name: Validate the kubectl binary against the checksum file
      shell: echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
      register: result

    - name: Assert that the kubectl binary is OK
      vars:
        expected: "kubectl: OK"
      assert:
        that:
          - result.stdout == expected
        fail_msg: "{{ result.stdout }}"
        success_msg: "{{ result.stdout }}"

    - name: Move kubectl and change permissions
      become: true
      file:
        src: "{{ kubectl.path }}"
        dest: /usr/local/bin/kubectl
        state: hard
        owner: root
        group: root
        mode: "+x"

    - name: Check if kubectl is installed
      shell: kubectl version --client
      register: client
      failed_when: client.rc > 1

# Groups
- name: Create team groups
  become: true
  ansible.builtin.group:
    name: "{{ item }}"
    state: present
  loop: "{{ team_groups }}"

# Directories
- name: Ensure shared directory exists
  ansible.builtin.file:
    path: "{{ shared_dir }}"
    state: directory
    owner: "root"
    group: "root"
    mode: "u=rwx,g=rx,o=rx"
  become: true

- name: Ensure shared common directory exists
  become: true
  ansible.builtin.file:
    path: "{{ shared_common_dir }}"
    state: directory
    owner: "root"
    group: "root"
    mode: "u=rwx,g=rwx,o=rwx"

- name: Ensure shared team directories exist
  become: true
  ansible.builtin.file:
    path: "{{ shared_dir }}/{{ item }}"
    state: directory
    owner: "root"
    group: "{{ item }}"
    mode: "u=rwx,g=rwx"
  loop: "{{ team_groups }}"

- name: Ensure team config directories exist
  become: true
  ansible.builtin.file:
    path: "{{ shared_dir }}/{{ item }}/config"
    state: directory
    owner: "root"
    group: "{{ item }}"
    mode: "u=rwx,g=rwx"
  loop: "{{ team_groups }}"



- name: Add gitlab-runner to team groups (if present)
  become: true
  block:
    - name: Get all users
      getent:
        database: passwd
        split: ':'
    - name: Add gitlab-runner to groups
      ansible.builtin.user:
        name: "gitlab-runner"
        groups: "{{ team_groups }}"
        append: true
      when: "'gitlab-runner' in getent_passwd.keys()"

