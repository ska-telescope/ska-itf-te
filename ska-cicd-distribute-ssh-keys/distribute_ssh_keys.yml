#!/usr/bin/env ansible-playbook
---

- name: "Update ssh keys"
  hosts:
    - all
  vars:
    add_ssh_keys: []
    remove_ssh_keys: []
    groups_to_add: "sudo"

  tasks:

    - name: Add users
      become: true
      tags:
        - addusers
      when: ansible_facts['distribution'] == 'Ubuntu'
      block:

        - name: User name
          ansible.builtin.set_fact:
            user_name: "{{ item.split()[-1] }}"
          register: user_name_result
          with_items: "{{ add_ssh_keys }}"

        - name: Make user namelist
          ansible.builtin.set_fact:
            user_names: "{{ user_name_result.results | map(attribute='ansible_facts.user_name') | list | reject('equalto', 'Generated-by-Nova') | list }}"

        - name: List of users to create
          ansible.builtin.debug:
            var: user_names
            verbosity: 2

        - name: Create user account
          ansible.builtin.user:
            name: "{{ item }}"
            shell: /bin/bash
            groups: "{{ groups_to_add }}"
            append: true
          with_items: "{{ user_names }}"

        - name: Create ~/.ssh/
          ansible.builtin.file:
            path: "/home/{{ item }}/.ssh"
            state: directory
            owner: "{{ item }}"
            group: "{{ item }}"
            mode: "0700"
          with_items: "{{ user_names }}"

        - name: Add to authorized_keys
          ansible.builtin.lineinfile:
            line: "{{ item }}"
            path: "/home/{{ item.split()[-1] }}/.ssh/authorized_keys"
            regex: "{{  item.split()[1] | regex_escape() }}" # use the hash to match
            create: true
            owner: "{{ item.split()[-1] }}"
            group: "{{ item.split()[-1] }}"
            mode: "0600"
          loop: "{{ add_ssh_keys }}"
          when: "not item.split()[-1] == 'Generated-by-Nova'"

        - name: Add to sudoers
          ansible.builtin.lineinfile:
            line: "{{ item }} ALL=(ALL) NOPASSWD:ALL"
            path: "/etc/sudoers.d/99-systems-team"
            regex: "{{ item }}"
            create: true
            owner: "root"
            group: "root"
            mode: "0440"
          with_items: "{{ user_names }}"

    - name: Remove users
      become: true
      tags:
        - removeusers
      block:

        - name: User name
          ansible.builtin.set_fact:
            user_name: "{{ item.split()[-1] }}"
          register: user_name_result
          with_items: "{{ remove_ssh_keys }}"

        - name: Make user namelist
          ansible.builtin.set_fact:
            user_names: "{{ user_name_result.results | map(attribute='ansible_facts.user_name') | list | reject('equalto', 'Generated-by-Nova') | list }}"

        - name: List of user to create
          ansible.builtin.debug:
            var: user_names

        - name: Remove user account
          ansible.builtin.user:
            name: "{{ item }}"
            state: absent
          with_items: "{{ user_names }}"

        - name: Remove from sudoers
          ansible.builtin.lineinfile:
            path: "/etc/sudoers.d/99-systems-team"
            regex: "{{ item }}"
            state: absent
          with_items: "{{ user_names }}"

    - name: Add ssh key
      ansible.builtin.lineinfile:
        line: "{{ item }}"
        dest: ~/.ssh/authorized_keys
        regex: "{{ item.split()[1] | regex_escape() }}" # use the hash to match
        create: false
        mode: "0600"
      with_items: "{{ add_ssh_keys }}"
      tags:
        - add

    - name: Remove ssh key
      ansible.builtin.lineinfile:
        line: "{{ item }}"
        dest: ~/.ssh/authorized_keys
        state: absent
      with_items: "{{ remove_ssh_keys }}"
      tags:
        - remove
