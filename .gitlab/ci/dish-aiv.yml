# ############################
# # Dish AIV related CICD jobs
# ############################
deploy-dish-structure-simulator:
  tags:
    - ska-k8srunner-za-itf
  image: $CI_REGISTRY/ska-telescope/ska-skampi/ska-skampi-ci:1.0.4
  stage: dish-aiv
  variables:
    MINIKUBE: "false"
    CLUSTER_DOMAIN: miditf.internal.skao.int
    INGRESS_HOST: k8s.miditf.internal.skao.int
    K8S_CHART: dish-structure-simulators
    KUBE_NAMESPACE: dish-structure-simulators
    K8S_EXTRA_PARAMS: --set ds-sim.maxuploadfilesize="131072m"
    SERVICE_ACCOUNT: ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-test-eq
    NEXUS_CACHE: NEXUS_CACHE
  before_script:
    - bash .make/resources/gitlab_section.sh upgrade_poetry "Upgrade Poetry" pip install --upgrade poetry
    - bash .make/resources/gitlab_section.sh vars "Make config dump" make vars
    - bash .make/resources/gitlab_section.sh creds "Create K8s Credentials" make itf-cluster-credentials
  script:
    - make k8s-template-chart
    - make k8s-install-chart
    - mkdir -p build
    - mv manifests.yaml build/ds_sim_manifests.yaml || true
    # - make k8s-get-pods
    - make itf-ds-links
  environment:
    name: dish-structure-simulators/dish-sim-1
    kubernetes:
      namespace: "$KUBE_NAMESPACE"
    url: https://$INGRESS_HOST/$KUBE_NAMESPACE/novnc/
    on_stop: remove-dish-structure-simulator
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - build/
  # when: manual
  needs:
    - remove-dish-structure-simulator
  allow_failure: true # need to keep this to unlock the pipeline

remove-dish-structure-simulator:
  stage: dish-aiv
  tags:
    - ska-k8srunner-za-itf
  variables:
    MINIKUBE: "false"
    CLUSTER_DOMAIN: miditf.internal.skao.int
    INGRESS_HOST: k8s.miditf.internal.skao.int
    K8S_CHART: dish-structure-simulators
    KUBE_NAMESPACE: dish-structure-simulators
    SERVICE_ACCOUNT: ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-test-eq
    NEXUS_CACHE: NEXUS_CACHE
  extends:
    - .uninstall_chart
  environment:
    name: dish-structure-simulators/dish-sim-1
    kubernetes:
      namespace: "$KUBE_NAMESPACE"
    url: https://$INGRESS_HOST/$KUBE_NAMESPACE/novnc/
    action: stop
  when: manual
  allow_failure: true # need to keep this to unlock the pipeline

.deploy-dish-lmc:
  cache: []
  stage: dish-aiv
  tags:
    - ska-k8srunner-za-itf
  variables:
    K8S_EXTRA_PARAMS: -f charts/dish-lmc/values.yaml --set "global.dishes={$DISH_INDEX}"
    CLUSTER_DOMAIN: miditf.internal.skao.int
    INGRESS_HOST: k8s.miditf.internal.skao.int
    K8S_CHART: dish-lmc
    KUBE_NAMESPACE: dish-lmc-$DISH_ID
    KUBE_APP: dish-lmc
    DISH_ID: ska$DISH_INDEX
  before_script:
    - make vars
  script:
    - make k8s-install-chart
  when: manual
  needs:
    - helm-chart-build
  allow_failure: true # need to keep this to unlock the pipeline
  environment:
    name: mid-itf/integration/dish-lmc-$DISH_ID
    kubernetes:
      namespace: "$KUBE_NAMESPACE"
    url: https://$INGRESS_HOST/$KUBE_NAMESPACE/taranta/

.destroy-dish-lmc:
  cache: []
  stage: dish-aiv
  tags:
    - ska-k8srunner-za-itf
  variables:
    K8S_EXTRA_PARAMS: -f charts/dish-lmc/values.yaml
    CLUSTER_DOMAIN: miditf.internal.skao.int
    INGRESS_HOST: k8s.miditf.internal.skao.int
    K8S_CHART: dish-lmc
    KUBE_NAMESPACE: dish-lmc-$DISH_ID
    KUBE_APP: dish-lmc
  extends:
    - .uninstall_chart
  needs:
    - helm-chart-build
  environment:
    name: mid-itf/integration/dish-lmc-$DISH_ID
    kubernetes:
      namespace: "$KUBE_NAMESPACE"
    url: https://$INGRESS_HOST/$KUBE_NAMESPACE/taranta/
    action: stop
  when: manual
  allow_failure: true # need to keep this to unlock the pipeline

deploy-dishlmc-ska001:
  extends:
    - .deploy-dish-lmc
  variables:
    DISH_INDEX: "001"
    on_stop: uninstall-dishlmc-ska001

uninstall-dishlmc-ska001:
  extends:
    - .destroy-dish-lmc
  variables:
    DISH_ID: ska001
