# ############################
# # Dish AIV related CICD jobs
# ############################

.dish_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      variables:
        KUBE_NAMESPACE: $KUBE_APP-$DISH_ID
        KUBE_NAMESPACE_PREFIX: dish-lmc-
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      variables:
        KUBE_NAMESPACE: "ci-$KUBE_APP-$DISH_ID-$CI_COMMIT_REF_NAME"
        KUBE_NAMESPACE_PREFIX: ci-dish-lmc-
        KUBE_NAMESPACE_POSTFIX: -$CI_COMMIT_REF_NAME

.dish-lmc:
  tags:
    - ska-k8srunner-za-itf
  extends:
    - .dish_rules
  variables:
    DISH_LMC_INITIAL_PARAMS: -f charts/dish-lmc/values.yaml --set "global.dishes={$DISH_INDEX}"
    CLUSTER_DOMAIN: miditf.internal.skao.int
    INGRESS_HOST: k8s.miditf.internal.skao.int
    K8S_CHART: dish-lmc
    KUBE_APP: dish-lmc
    DISH_ID: ska$DISH_INDEX
  # when: manual
  needs:
    - helm-chart-build
  allow_failure: true # need to keep this to unlock the pipeline
  environment:
    name: mid-itf/integration/$KUBE_NAMESPACE
    kubernetes:
      namespace: "$KUBE_NAMESPACE"
    url: https://$INGRESS_HOST/$KUBE_NAMESPACE/taranta/

.deploy-dish-lmc:
  stage: deploy-dish-aiv
  before_script:
    - bash .make/resources/gitlab_section.sh vars "Print vars" make vars
  script:
    - bash .make/resources/gitlab_section.sh template "Template chart" make k8s-template-chart
    - bash .make/resources/gitlab_section.sh install "Install chart" make k8s-install-chart
    - make itf-dish-links
  extends:
    - .dish-lmc

.redeploy-dish-lmc:
  extends:
    - .deploy-dish-lmc
  script:
    - !reference [.uninstall_chart, script]
    - !reference [.deploy-dish-lmc, script]

.destroy-dish-lmc:
  stage: remove-dish-aiv
  extends:
    - .uninstall_chart
    - .dish-lmc
  environment:
    action: stop

.deploy-additional-lmc:
  extends:
    - .deploy-dish-lmc
  when: on_success

deploy-dishlmc-ska001:
  extends:
    - .deploy-dish-lmc
  needs:
    - deploy-ds-sim-ska001
  when: on_success
  variables:
    DISH_INDEX: "001"
    DISH_LMC_EXTRA_PARAMS: -f charts/dish-lmc/values-cetc.yaml --set dishlmc.ska-mid-dish-ds-manager.dishstructuremanager.dsSim.fqdn=$DS_SIM_OPCUA_FQDN
  environment:
    on_stop: uninstall-dishlmc-ska001

redeploy-dishlmc-ska001:
  extends:
    - .redeploy-dish-lmc
  needs:
    - redeploy-ds-sim-ska001
  when: on_success
  variables:
    DISH_INDEX: "001"
    DISH_LMC_EXTRA_PARAMS: -f charts/dish-lmc/values-cetc.yaml --set dishlmc.ska-mid-dish-ds-manager.dishstructuremanager.dsSim.fqdn=$DS_SIM_OPCUA_FQDN
  environment:
    on_stop: uninstall-dishlmc-ska001

.aa05-dishes:
  stage: on_demand_itf_sut
  extends:
    - .sut_base
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: manual
      variables:
        KUBE_NAMESPACE_PREFIX: dish-lmc-
        ENV_NAME: dish.itf/dish-lmc-aa05
      allow_failure: true
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      when: manual
      variables:
        KUBE_NAMESPACE: "ci-$KUBE_APP-$DISH_ID-$CI_COMMIT_REF_NAME"
        KUBE_NAMESPACE_PREFIX: ci-dish-lmc-
        KUBE_NAMESPACE_POSTFIX: -$CI_COMMIT_REF_NAME
        ENV_NAME: dish.itf/ci-dish-lmc-aa05-$CI_COMMIT_REF_NAME
      allow_failure: true
  environment:
    name: $ENV_NAME

deploy-aa05-dishes:
  extends:
    - .aa05-dishes
    - .mid
  script:
    - echo "Deploying multiple dishes in downstream dish-aiv stage - first deploy ska001 manually"
    - echo "Deploying dishes $DISH_IDS:"
    - |
      make itf-dish-ids
      cat charts/system-under-test/tmc-values.yaml
  environment:
    on_stop: uninstall-aa05-dishes

redeploy-aa05-dishes:
  extends:
    - .aa05-dishes
  script:
    - echo "Redeploying multiple dishes in downstream dish-aiv stage - first deploy ska001 manually"
    - echo "Redeploying 'SKA001', 'SKA036', 'SKA063', 'SKA100'"
  environment:
    on_stop: uninstall-aa05-dishes

uninstall-aa05-dishes:
  extends:
    - .aa05-dishes
  script:
    - echo "Uninstalling all dishes in downstream dish-aiv stage"
    - echo "Uninstalling 'SKA001', 'SKA036', 'SKA063', 'SKA100'"
  environment:
    action: stop

deploy-dishlmc-ska036:
  extends:
    - .deploy-additional-lmc
  needs:
    - deploy-dishlmc-ska001
    - deploy-aa05-dishes
  variables:
    DISH_INDEX: "036"
  environment:
    on_stop: uninstall-dishlmc-ska036

deploy-dishlmc-ska063:
  extends:
    - .deploy-additional-lmc
  needs:
    - deploy-aa05-dishes
    - deploy-dishlmc-ska001
  variables:
    DISH_INDEX: "063"
  environment:
    on_stop: uninstall-dishlmc-ska063

deploy-dishlmc-ska100:
  extends:
    - .deploy-additional-lmc
  needs:
    - deploy-aa05-dishes
    - deploy-dishlmc-ska001
  variables:
    DISH_LMC_INITIAL_PARAMS: -f charts/dish-lmc/values.yaml
    DISH_INDEX: "100"
  environment:
    on_stop: uninstall-dishlmc-ska100

.destroy-aa05-dishes:
  extends:
    - .destroy-dish-lmc
  when: on_success
  needs:
    - uninstall-aa05-dishes

uninstall-dishlmc-ska001:
  extends:
    - .destroy-dish-lmc
  variables:
    DISH_ID: ska001

uninstall-dishlmc-ska036:
  extends:
    - .destroy-aa05-dishes
  variables:
    DISH_ID: ska036

uninstall-dishlmc-ska063:
  extends:
    - .destroy-aa05-dishes
  variables:
    DISH_ID: ska063

uninstall-dishlmc-ska100:
  extends:
    - .destroy-aa05-dishes
  variables:
    DISH_ID: ska100

register-spfc:
  tags:
    - ska-k8srunner-za-itf
  image: artefact.skao.int/ska-tango-images-pytango-runtime:9.4.3
  variables:
    SERVICE_NAME: tango-databaseds
    NAMESPACE: dish-lmc-ska001
    TANGO_HOST: "0.0.0.0"
    PLAYBOOK_PARAMETERS: ""
  script:
    - python3 -m pip install --user ansible-core
    #Install kubectl as this image does not contain it
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      && sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    - export TANGO_HOST=$(kubectl -n ${NAMESPACE} get svc ${SERVICE_NAME} -o jsonpath={.status.loadBalancer.ingress[0].ip})
    - export PLAYBOOK_PARAMETERS=$PLAYBOOK_PARAMETERS:--extra-vars='{tango_host:$TANGO_HOST:10000}'
    - python scripts/spfc/register_device.py $TANGO_HOST
  when: manual
