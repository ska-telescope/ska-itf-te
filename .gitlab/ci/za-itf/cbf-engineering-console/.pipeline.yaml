.cbf-eng-console:
  tags:
    - ska-k8srunner-za-itf
  variables:
    CONFIG: mid
    K8S_CHART: ska-mid-cbf-engineering-console
    KUBE_APP: ska-mid-itf-cbf-ec
    KUBE_NAMESPACE_SDP: "ci-ska-mid-itf-$CI_COMMIT_REF_NAME-sdp"
    INGRESS_HOST: "k8s.miditf.internal.skao.int"
    CLUSTER_DOMAIN: "miditf.internal.skao.int"
    MINIKUBE: "false"
  environment:
    name: sut/cbf-engineering-console/$KUBE_NAMESPACE
    kubernetes:
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/dashboard/"
  when: manual
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_PIPELINE_ID"
    paths:
      - "build/"

.cbf-eng-console-install:
  script:
    - make vars
    - bash .make/resources/gitlab_section.sh install "Install chart" make k8s-install-chart
    - bash .make/resources/gitlab_section.sh wait "Wait for installation" make k8s-wait
  after_script:
    - make ec-links
    # - bash .make/resources/gitlab_section.sh template "Template chart" make k8s-template-chart-with-build-artifacts
    - bash .make/resources/gitlab_section.sh helmget "Get all Helm configuration data" helm get all -n $KUBE_NAMESPACE $HELM_RELEASE

.cbf-eng-console-destroy:
  script:
    - !reference [.cleanup, script]
  environment:
    action: stop

.cbf-eng-console-redeploy:
  extends:
    - .cbf-eng-console-install
  before_script:
    - !reference [.cleanup, script]

.cbf-eng-console-staging:
  extends:
    - .cbf-eng-console
    - .staging_rules
  stage: staging
  variables:
    KUBE_NAMESPACE: shared-ska-dataproducts
    KUBE_NAMESPACE_SDP: staging-sdp
    DPD_PVC_NAME: staging-pvc
    HELM_RELEASE: staging

deploy-cbf-ec-staging:
  extends:
    - .cbf-eng-console-staging
    - .cbf-eng-console-install
  environment:
    on_stop: destroy-cbf-ec-staging

destroy-cbf-ec-staging:
  extends:
    - .cbf-eng-console-staging
    - .cbf-eng-console-destroy

redeploy-cbf-ec-staging:
  extends:
    - .cbf-eng-console-staging
    - .cbf-eng-console-redeploy
  environment:
    on_stop: destroy-cbf-ec-staging
