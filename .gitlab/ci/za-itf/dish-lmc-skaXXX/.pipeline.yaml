# ############################
# # Dish AIV related CICD jobs
# ############################
.dish-env:
  image: $DEPLOY_IMAGE
  variables:
    DISH_ENABLERS: "-f .gitlab/ci/za-itf/dish-lmc-skaXXX/dish-enablers.yaml"
    DISH_LMC_INITIAL_PARAMS: -f charts/ska-mid/values.yaml --set global.dishes={$DISH_INDEX} --set global.raw_user_account=$CAR_RAW_USERNAME --set global.raw_user_pass=$CAR_RAW_PASSWORD --set ska-tango-archiver.dbpassword=${EDA_DB_PASSWORD} --set ska-tango-archiver.archviewer.instances[0].timescale_login=admin:${EDA_DB_PASSWORD}
    CLUSTER_DOMAIN: miditf.internal.skao.int
    INGRESS_HOST: k8s.miditf.internal.skao.int
    K8S_CHART: ska-mid
    KUBE_APP: dish-lmc
    SPFRX_BIN: /usr/local/bin
    SPFRX_LOCAL_DIR: artifacts
    SPFRX_SCRIPTS_DIR: scripts
    SPFRX_TANGO_LOGGING_LEVEL: 4

.dish_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: "$CI_COMMIT_TAG"
      variables:
        SPFRX_IN_THE_LOOP: "true"
        SPFC_IN_THE_LOOP: "false"
        KUBE_NAMESPACE: staging-$KUBE_APP-$DISH_ID
        KUBE_NAMESPACE_PREFIX: staging-dish-lmc-
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      variables:
        KUBE_NAMESPACE: "ci-$KUBE_APP-$DISH_ID-$CI_COMMIT_REF_NAME"
        KUBE_NAMESPACE_PREFIX: ci-dish-lmc-
        KUBE_NAMESPACE_POSTFIX: -$CI_COMMIT_REF_NAME
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        KUBE_NAMESPACE: integration-$KUBE_APP-$DISH_ID
        KUBE_NAMESPACE_PREFIX: integration-dish-lmc-

.dish-lmc:
  tags:
    - ska-k8srunner-za-itf
  extends:
    - .dish-env
  needs:
    - helm-chart-build
  allow_failure: true # need to keep this to unlock the pipeline
  environment:
    name: mid-itf/$KUBE_NAMESPACE

.deploy-dish-lmc:
  stage: deploy-dish-aiv
  image: $DEPLOY_IMAGE
  before_script:
    - bash .make/resources/gitlab_section.sh vars "Print vars" make vars
    - if ! [[ "$DISH_IDS" =~ .*${DISH_ID^^}.* ]]; then echo "DISH_IDS $DISH_IDS not matching $DISH_ID; exiting..." && exit 1; fi
  script:
    - bash .make/resources/gitlab_section.sh poetry "Poetry Install" poetry install
    - export PATH=.venv/bin:${PATH} # TEMPORARY COMMIT: fix in one place
    - bash .make/resources/gitlab_section.sh install "Install chart" make k8s-install-chart;
    - bash .make/resources/gitlab_section.sh wait "Wait for completion" make k8s-wait
    - make itf-dish-links
    - bash .make/resources/gitlab_section.sh wait "Wait for SPFRx deployment completion - check logs on k9s" make k8s-wait KUBE_APP=spfrx
  after_script:
    - bash .make/resources/gitlab_section.sh deployment-config "Output deployment config information" make k8s-template-chart
  extends:
    - .dish-lmc
    - .dish_rules
  environment:
    kubernetes:
      namespace: "$KUBE_NAMESPACE"
    url: https://$INGRESS_HOST/$KUBE_NAMESPACE/taranta/

.redeploy-dish-lmc:
  extends:
    - .deploy-dish-lmc
  script:
    - !reference [.uninstall-chart, script]
    - !reference [.deploy-dish-lmc, script]

.deploy-additional-lmc:
  extends:
    - .deploy-dish-lmc
  when: on_success

.destroy-dish-lmc:
  stage: deploy-dish-aiv
  extends:
    - .uninstall-chart
    - .dish-lmc
    - .dish_rules
  environment:
    action: stop
  when: manual

.destroy-aa05-dishes:
  extends:
    - .destroy-dish-lmc
  when: on_success
  needs:
    - uninstall-aa05-dishes

include:
  - local: .gitlab/ci/za-itf/dish-lmc-skaXXX/1-ska001/.pipeline.yaml
  - local: .gitlab/ci/za-itf/dish-lmc-skaXXX/2-ska036/.pipeline.yaml
  - local: .gitlab/ci/za-itf/dish-lmc-skaXXX/3-ska063/.pipeline.yaml
  - local: .gitlab/ci/za-itf/dish-lmc-skaXXX/4-ska100/.pipeline.yaml
