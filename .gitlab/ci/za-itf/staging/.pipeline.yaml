.staging-env:
  stage: staging
  tags:
    - ska-k8srunner-za-itf
  extends:
    - .staging_rules
  variables:
    CONFIG: mid
    HELM_RELEASE: "staging"
    KUBE_NAMESPACE: "staging"
    KUBE_NAMESPACE_SDP: "$KUBE_NAMESPACE-sdp"
    SERVICE_ACCOUNT: "ci-svc-staging"
    ARCHIVER_DBNAME: "staging_archiver_db"
    KEEP_NAMESPACE: "true"
    K8S_CHART: "ska-mid-itf-sut"
    CLUSTER_DOMAIN_POSTFIX: miditf.internal.skao.int
    KUBE_APP: ska-mid-sut
    INGRESS_HOST: "k8s.miditf.internal.skao.int"
    CLUSTER_DOMAIN: "miditf.internal.skao.int"
    TANGO_DATABASE_DS: tango-databaseds
    PDU_IP: "10.20.2.14"
    K8S_AUTH_NAMESPACES: "$KUBE_NAMESPACE $KUBE_NAMESPACE_SDP"
    K8S_AUTH_SERVICE_ACCOUNT: "ci-svc-ska-miditf-$CI_PIPELINE_ID"
    # HARDWARE AND DISH IN THE LOOP SETTINGS
    CBF_HW_IN_THE_LOOP: "true"
    DISH_LMC_IN_THE_LOOP: "true"
    # SDP CONFIGURATION FOR PERSISTENT DATA
    DPD_PVC_NAME: staging-pvc

.staging_rules:
  # variables:
  #   K8S_INSTALL_FROM_CAR: "true" ### TEMPORARY COMMIT: NOT WORKING ###
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: "$CI_COMMIT_TAG != null"
      when: manual
      variables:
        KUBE_NAMESPACE_PREFIX: staging-dish-lmc-
      allow_failure: true
    - when: never

deploy-sut-staging:
  extends:
    - .deploy
    - .staging-env
  when: on_success
  needs:
    - k8s-test-runner
  environment:
    name: mid-itf/ska-$CONFIG-staging
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    on_stop: destroy-sut-staging

redeploy-sut-staging:
  variables:
    CBF_HW_IN_THE_LOOP: "true"
    PDU_IP: "10.20.2.14"
    K8S_AUTH_NAMESPACES: "$KUBE_NAMESPACE $KUBE_NAMESPACE_SDP"
    K8S_AUTH_SERVICE_ACCOUNT: "ci-svc-ska-miditf-$CI_PIPELINE_ID"
  extends:
    - .redeploy
    - .staging-env
  needs:
    - k8s-test-runner
  environment:
    name: mid-itf/ska-$CONFIG-staging
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    on_stop: destroy-sut-staging

info-sut-staging:
  extends:
    - .info
    - .staging-env

destroy-sut-staging:
  extends:
    - .cleanup
    - .staging-env
  environment:
    name: mid-itf/ska-$CONFIG-staging
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    action: stop

.test-staging-rules:
  rules:
    - if: $EXECUTE_E2E_STAGING_WITH_HW == "true"
      when: on_success
      allow_failure: true
    - if: $CI_COMMIT_TAG
      when: manual
      allow_failure: true
    - when: never

test-end-to-end-staging:
  stage: test
  extends:
    - .staging-env
    - .test-end-to-end-with-hw
    - .test-staging-rules

test-telescope-on-staging:
  stage: test
  extends:
    - .staging-env
    - .test-telescope-on-with-hw
    - .test-staging-rules

test-scan-staging:
  stage: test
  extends:
    - .staging-env
    - .test-scan-with-hw
    - .test-staging-rules

test-telescope-off-staging:
  stage: test
  extends:
    - .staging-env
    - .test-telescope-off-with-hw
    - .test-staging-rules
