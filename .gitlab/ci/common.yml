# ##############################################################
# # Common deployment templates (Copied from Skampi Deployments)
# ##############################################################
.mid:
  variables:
    CONFIG: mid

.on_demand_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      when: manual
      allow_failure: true
    - when: never

.integration_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: manual
      allow_failure: true
    - when: never

.staging_rules:
  variables:
    K8S_INSTALL_FROM_CAR: "true"
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: manual
      allow_failure: true
    - when: never

.deploy:
  stage: deploy
  variables:
    K8S_CHART: "ska-$CONFIG"
    HELM_RELEASE: sut
    KUBE_NAMESPACE: "ci-ska-mid-itf-$CI_PIPELINE_ID-$CONFIG"
    KUBE_NAMESPACE_SDP: "$KUBE_NAMESPACE-sdp"
    K8S_AUTH_NAMESPACES: "$KUBE_NAMESPACE $KUBE_NAMESPACE_SDP"
    K8S_AUTH_SERVICE_ACCOUNT: "ci-svc-ska-miditf-$CI_PIPELINE_ID"
    ARCHIVER_DBNAME: "${CONFIG}_archiver_db_${CI_COMMIT_REF_SLUG}"
    # VALUES: pipeline.yaml
  script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash .make/resources/gitlab_section.sh vars "Make config dump" make vars
    - bash .make/resources/gitlab_section.sh creds "Create K8s Credentials" make itf-cluster-credentials
    - |
      if [ "$K8S_INSTALL_FROM_CAR" != "true" ]; then
        bash .make/resources/gitlab_section.sh install "Installing $K8S_CHART Charts - not from CAR" make k8s-install-chart
      else
        bash .make/resources/gitlab_section.sh install "Installing $K8S_CHART Charts from CAR" make k8s-install-chart-car
      fi
    - bash .make/resources/gitlab_section.sh get-ns "Get namespace resources" make k8s-get
    - bash .make/resources/gitlab_section.sh wait-ns "Wait namespace resources" make k8s-wait
    - bash .make/resources/gitlab_section.sh links "Skampi landing page" make links
  after_script:
    - make template-chart
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_PIPELINE_ID-$CI_JOB_STAGE-$CI_JOB_NAME"
    paths:
      - "build/"

.info:
  stage: deploy
  variables:
    K8S_CHART: "ska-$CONFIG"
    HELM_RELEASE: sut
    KUBE_NAMESPACE: "ci-ska-mid-itf-$CI_PIPELINE_ID-$CONFIG"
    KUBE_NAMESPACE_SDP: "$KUBE_NAMESPACE-sdp"
  script:
    - bash .make/resources/gitlab_section.sh get-ns "Get namespace resources" make k8s-get
    - bash .make/resources/gitlab_section.sh get-ns-dp "Get SDP namespace resources" make k8s-get KUBE_NAMESPACE=${KUBE_NAMESPACE}-sdp
    - make k8s-info
    - make k8s-info KUBE_NAMESPACE=${KUBE_NAMESPACE}-sdp

.cleanup:
  stage: cleanup
  variables:
    K8S_CHART: "ska-$CONFIG"
    HELM_RELEASE: sut
    KUBE_NAMESPACE: "ci-ska-mid-itf-$CI_PIPELINE_ID-$CONFIG"
    KUBE_NAMESPACE_SDP: "$KUBE_NAMESPACE-sdp"
  script: &cleanup_script
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash .make/resources/gitlab_section.sh vars "Make config dump" make vars
    - make k8s-uninstall-chart || true
    - |
      if [ "$KEEP_NAMESPACE" != "true" ]; then
        make k8s-delete-namespace
      fi

.redeploy:
  extends:
    - .deploy
  before_script: *cleanup_script

# If the pipeline is being exectued as a downstream, do not lint
# or build

helm-chart-lint:
  after_script:
    - make helm-check-deps
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - exists:
        - charts/**/*

helm-chart-build:
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - exists:
        - charts/**/*

docs-build:
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - exists:
        - charts/**/*

### TARANTA DEPLOYMENT
deploy-taranta:
  stage: platform
  tags:
    - ska-k8srunner-za-itf
  variables:
    KUBE_NAMESPACE: taranta
    KUBE_APP: ska-taranta-backend
    HELM_RELEASE: taranta
    K8S_CHART: taranta-itf
  script:
    - make k8s-install-chart
  when: manual
