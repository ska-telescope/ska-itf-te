# ############################################
# # System Under Test Deployment and Test jobs
# ############################################
.sut_base:
  tags:
    - ska-k8srunner-za-itf
  extends:
    - .mid
  variables:
    K8S_CHART: system-under-test
    KUBE_APP: ska-mid-sut
    # VALUES: "pipeline.yaml resources/itf/$CONFIG.yml" # DEFINE FOR EACH JOB
    INGRESS_HOST: "k8s.miditf.internal.skao.int"
    CLUSTER_DOMAIN: "miditf.internal.skao.int"
    K8S_EXTRA_CHART_PARMS: "--set global.ska-tango-archiver.enabled=false  --set ska-tango-archiver.enabled=false"
    TANGO_DATABASE_DS: tango-databaseds
    KUBE_NAMESPACE: ci-ska-mid-itf-$CI_COMMIT_REF_NAME
    # LOADBALANCER_IP: 10.164.10.1

.sut_base_no_cache:
  extends:
    - .sut_base
  cache: []

.sut_on_demand:
  stage: on_demand_itf_sut
  extends:
    - .sut_base_no_cache
    - .on_demand_rules
  variables:
    HELM_RELEASE: sut
    KUBE_NAMESPACE: "ci-ska-mid-itf-$CI_COMMIT_REF_NAME"
    KUBE_NAMESPACE_SDP: "$KUBE_NAMESPACE-sdp"
    SERVICE_ACCOUNT: "ci-svc-ska-miditf-$CI_COMMIT_REF_NAME"

deploy-sut-on-demand:
  extends:
    - .deploy
    - .sut_on_demand
  environment:
    name: mid-itf/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    on_stop: destroy-sut-on-demand

redeploy-sut-on-demand:
  extends:
    - .redeploy
    - .sut_on_demand
  environment:
    name: mid-itf/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    on_stop: destroy-sut-on-demand

info-sut-on-demand:
  extends:
    - .info
    - .sut_on_demand

destroy-sut-on-demand:
  extends:
    - .cleanup
    - .sut_on_demand
  environment:
    name: mid-itf/ska-$CONFIG-$CI_COMMIT_REF_SLUG
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    action: stop

.sut_integration:
  stage: integration
  extends:
    - .sut_base
    - .integration_rules
  variables:
    HELM_RELEASE: "integration-$CI_COMMIT_REF_SLUG"
    KUBE_NAMESPACE: "integration"
    KUBE_NAMESPACE_SDP: "$KUBE_NAMESPACE-sdp"
    SERVICE_ACCOUNT: "ci-svc-integration"
    ARCHIVER_DBNAME: "integration_archiver_db"
    KEEP_NAMESPACE: "true"

deploy-sut-integration:
  extends:
    - .deploy
    - .sut_integration
  # needs:
  #   - test-mid
  environment:
    name: mid-itf/ska-$CONFIG-integration
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    on_stop: destroy-sut-integration

redeploy-sut-integration:
  extends:
    - .redeploy
    - .sut_integration
  environment:
    name: mid-itf/ska-$CONFIG-integration
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    on_stop: destroy-sut-integration

info-sut-integration:
  extends:
    - .info
    - .sut_integration

destroy-sut-integration:
  extends:
    - .cleanup
    - .sut_integration
  environment:
    name: mid-itf/ska-$CONFIG-integration
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    action: stop

.sut_staging:
  stage: staging
  extends:
    - .sut_base
    - .staging_rules
  variables:
    HELM_RELEASE: "staging-$CI_COMMIT_REF_SLUG"
    KUBE_NAMESPACE: "staging"
    KUBE_NAMESPACE_SDP: "$KUBE_NAMESPACE-sdp"
    SERVICE_ACCOUNT: "ci-svc-staging"
    ARCHIVER_DBNAME: "staging_archiver_db"
    KEEP_NAMESPACE: "true"

deploy-sut-staging:
  extends:
    - .deploy
    - .sut_staging
  needs:
    - deploy-sut-integration
  environment:
    name: mid-itf/ska-$CONFIG-staging
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    on_stop: destroy-sut-staging

redeploy-sut-staging:
  extends:
    - .redeploy
    - .sut_staging
  environment:
    name: mid-itf/ska-$CONFIG-staging
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    on_stop: destroy-sut-staging

info-sut-staging:
  extends:
    - .info
    - .sut_staging

destroy-sut-staging:
  extends:
    - .cleanup
    - .sut_staging
  environment:
    name: mid-itf/ska-$CONFIG-staging
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    action: stop

.ds-sim-test-vars:
  variables:
    DS_SIM_NAMESPACE: $KUBE_NAMESPACE-ds-sim
    DS_SIM_ENV: "true"
    DS_SIM_SERVICE: ds-sim

k8s-test-runner:
  tags:
    - ska-k8srunner-za-itf
  allow_failure: false
  image: $TEST_IMAGE
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_PIPELINE_ID"
    paths:
      - "build/"
  extends:
    - .sut_base_no_cache
    - .ds-sim-test-vars
  before_script:
    - time poetry install
    - '[ -f .make/k8s.mk ] || (echo "File k8s.mk not included in Makefile; exit 1")'
    - "make help | grep k8s-test"
    - make install-test-system
  script:
    - make integration-test TANGO_HOST=$TANGO_DATABASE_DS.$KUBE_NAMESPACE.svc.$CLUSTER_DOMAIN:10000 || true
    - |
      if [[ 0 == "$(cat build/status)" ]]; then
        make uninstall-test-system
      else
        echo "#####################################################################################"
        echo "# NOTE: this deployment will persist for about 2 hours, for investigation purposes. #"
        echo "#####################################################################################"
      fi
    - '[ -f build/status ] || (echo "Something went wrong with the test (no build/status file); exit 1")'
    - exit $(cat build/status)
  variables:
    DEBUG_ENTRYPOINT: "True"
    DEBUG_ENTRYPOINT_EXTENDED: "True"
    LIVE_LOGGING_EXTENDED: "True"
    SHOW_STEP_FUNCTIONS: "True"
    CAPTURE_LOGS: "True"
    EXIT_AT_FAIL: "True"
    KUBE_NAMESPACE_SDP: "$KUBE_NAMESPACE-sdp"

stop-k8s-test-runner:
  tags:
    - ska-k8srunner-za-itf
  script:
    - make uninstall-test-system
  extends:
    - .sut_base
    - .ds-sim-test-vars
  when: manual

publish-k8s-test-results:
  stage: publish
  needs:
    - k8s-test-runner
    - xray-publish
  image: $TEST_IMAGE
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_PIPELINE_ID"
    paths:
      - "build/"
  extends:
    - .sut_base
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: always
    - when: never
  script:
    - echo "Test result code from k8s-test-runner job was $(cat build/status)"
    - poetry install
    - make upload-to-confluence
