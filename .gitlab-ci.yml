image: $SKA_K8S_TOOLS_BUILD_DEPLOY

variables:
  MINIKUBE: "false"
  CI_REGISTRY_IMAGE: $CI_REGISTRY/ska-telescope/ska-mid-itf/base
  TEST_IMAGE: $CI_REGISTRY_IMAGE:3ad90d1c
  GIT_SUBMODULE_STRATEGY: recursive
  EXPOSE_All_DS: "true"
  CLEAN_UP_TEST_ENVIRONMENT: "true"
  DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
  POETRY_CONFIG_VIRTUALENVS_CREATE: "true"
  # PYTEST_SUBSYS_MARK: (csp_startup or sdp or eda)
  # K8S_INSTALL_FROM_CAR: "false"remove redundant cache
stages:
  - pre-build
  - verify-test-equipment
  - on_demand_itf_sut
  - lint
  - build
  - test
  - platform
  - test-equipment-setup
  - dish-aiv
  - integration
  - staging
  - upload
  - publish
  - pages
  - scan
include:
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/python.gitlab-ci.yml"
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/docs.gitlab-ci.yml"
  # OCI Images
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/oci-image.gitlab-ci.yml"
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/finaliser.gitlab-ci.yml"
  # Helm Charts
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/helm-chart.gitlab-ci.yml"
  # k8s steps
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/k8s-test-runner.gitlab-ci.yml"

  # changelog release page
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/changelog.gitlab-ci.yml"

  # deploy steps
  # - project: "ska-telescope/templates-repository"
  #   file: "gitlab-ci/includes/deploy.gitlab-ci.yml"

  - local: .gitlab/ci/common.yml
  - local: .gitlab/ci/sut.yml
  - local: .gitlab/ci/test-equipment.yml
  - local: .gitlab/ci/dish-aiv.yml
  - local: .gitlab/ci/ansible.yml

python-test:
  image: $TEST_IMAGE

python-lint:
  image: $TEST_IMAGE
  rules:
    - allow_failure: true

#### FROM SKAMPI, COPIED FOR REFERENCE:
.uninstall_chart:
  script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash .make/resources/gitlab_section.sh vars "Make config dump" make vars
    - bash .make/resources/gitlab_section.sh env "Environment dump" env
    - make k8s-uninstall-chart || true
    - kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all --ignore-not-found
    - make k8s-delete-namespace

deploy-test-equipment-for-verification:
  tags:
    - ska-k8srunner-za-itf
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  stage: verify-test-equipment
  variables:
    MINIKUBE: "false"
    CLUSTER_DOMAIN: miditf.internal.skao.int
    INGRESS_HOST: k8s.miditf.internal.skao.int
    KUBE_APP: ska-ser-test-equipment
    K8S_CHART: test-equipment-verification
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
    SERVICE_ACCOUNT: ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-test-eq
    NEXUS_CACHE: NEXUS_CACHE
  before_script:
    - make k8s-uninstall-chart
    - make k8s-delete-namespace
    - bash .make/resources/gitlab_section.sh vars "Make config dump" make vars
    - bash .make/resources/gitlab_section.sh creds "Create K8s Credentials" make itf-cluster-credentials
  script:
    - make k8s-install-chart
    - make itf-te-links
    - make k8s-wait || true
    - bash .make/resources/gitlab_section.sh template "Show used Helm Chart Template" make k8s-template-chart
  environment:
    name: ska-mid-itf/te-verification
    kubernetes:
      namespace: "$KUBE_NAMESPACE"
    url: https://$INGRESS_HOST/$KUBE_NAMESPACE/taranta
  allow_failure: true # need to keep this to unlock the pipeline
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - build/
  rules:
    - changes:
        - charts/test-equipment-verification/*
        - resources/test-equipment-dev.mk
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never

python-build-for-publication-legacy:
  image: $TEST_IMAGE
  before_script:
    - ""

python-build-for-publication:
  image: $TEST_IMAGE
  before_script:
    - ""

python-build-for-development-legacy:
  image: $TEST_IMAGE
  before_script:
    - ""

python-build-for-development:
  image: $TEST_IMAGE
  before_script:
    - ""
