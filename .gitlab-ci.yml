image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE

# Globally reused tags declaration for jobs
.tags_default:
  tags:
    - ska-k8srunner-za-itf

variables:
  GIT_SUBMODULE_STRATEGY: recursive
cache:
  paths:
    - build
stages:
  - deploy
  - lint
  - build
  - integration # no idea what this is for
  # - staging
  - test
  - upload
  - publish
  - pages
  - scan
include:
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/python.gitlab-ci.yml"
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/docs.gitlab-ci.yml"
  # OCI Images
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/oci-image.gitlab-ci.yml"
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/finaliser.gitlab-ci.yml"
  # Helm Charts
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/helm-chart.gitlab-ci.yml"
  # k8s steps
  # - project: "ska-telescope/templates-repository"
  #   file: "gitlab-ci/includes/k8s.gitlab-ci.yml"

  # changelog release page
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/changelog.gitlab-ci.yml"

  # deploy steps
  # - project: "ska-telescope/templates-repository"
  #   file: "gitlab-ci/includes/deploy.gitlab-ci.yml"

python-test:
  image: artefact.skao.int/ska-tango-images-pytango-builder:9.3.32
  before_script:
    - bash .make/resources/gitlab_section.sh upgrade_poetry "Upgrade Poetry" pip install --upgrade poetry

python-lint:
  image: artefact.skao.int/ska-tango-images-pytango-builder:9.3.32
  before_script:
    - bash .make/resources/gitlab_section.sh upgrade_poetry "Upgrade Poetry" pip install --upgrade poetry
  rules:
    - allow_failure: true

deploy-test-equipment:
  stage: deploy
  image: artefact.skao.int/ska-tango-images-pytango-builder:9.3.32
  before_script:
    - bash .make/resources/gitlab_section.sh upgrade_poetry "Upgrade Poetry" pip install --upgrade poetry
  variables:
    KUBE_NAMESPACE: mid-itf-test-equipment
    K8S_CHART: ska-mid-itf
  script:
    - make k8s-install-chart
  rules:
    - allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "trigger"
      when: always
    - when: manual
