image: $SKA_K8S_TOOLS_BUILD_DEPLOY

variables:
  MINIKUBE: "false"
  CI_DEBUG_SERVICES: "true"
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_DEPTH: 1
  EXPOSE_All_DS: "true"
  CLEAN_UP_TEST_ENVIRONMENT: "true"
  DEPLOYMENT_CONFIGURATION: "ska-$CONFIG"
  POETRY_CONFIG_VIRTUALENVS_CREATE: "true"
  # Don't update this to 0.8.1 or 0.8.2 - it breaks the tests
  # see https://gitlab.com/ska-telescope/ska-mid-itf/-/jobs/6807963899
  DEPLOY_IMAGE: registry.gitlab.com/ska-telescope/ska-mid-itf-engineering-tools/ska-mid-itf-engineering-tools:0.9.4-dev.c3fbb4a03
  # DEPLOY_IMAGE: $CI_REGISTRY/ska-telescope/ska-mid-itf-engineering-tools/ska-mid-itf-engineering-tools:0.9.3
  MCS_CONFIG_FILE_PATH: resources/mcs
  DISH_IDS: "SKA001 SKA036 SKA063 SKA100" # SKA063 SKA100 Add additional Dishes back when adding their pipelines in this order"

  # PYTEST_SUBSYS_MARK: (csp_startup or sdp or eda)
  # K8S_INSTALL_FROM_CAR: "false"remove redundant cache
stages:
  - on_demand_itf_sut
  - build
  - deploy-dish-aiv
  - remove-dish-aiv
  - test
  - lint
  - platform
  - integration
  - staging
  - upload
  - publish
  - pages
  - scan

include:
  # - project: "ska-telescope/templates-repository" TEMPORARY COMMIT: NOT PUBLISHING TO CAR FOR THE MOMENT - POSSIBLY NEED TO RELOOK THIS IN FUTURE
  #   file: "gitlab-ci/includes/python.gitlab-ci.yml"
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/python-lint.gitlab-ci.yml"
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/docs.gitlab-ci.yml"
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/oci-image.gitlab-ci.yml"
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/finaliser.gitlab-ci.yml"
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/helm-chart.gitlab-ci.yml"
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/k8s-test-runner.gitlab-ci.yml"
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/changelog.gitlab-ci.yml"
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/xray-publish.gitlab-ci.yml"
  - project: "ska-telescope/ska-mid-itf-engineering-tools"
    file: .gitlab/ci/check-dependencies/.pipeline.yaml
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/tmdata.gitlab-ci.yml'


  - local: .gitlab/ci/.jobs.yaml
  - local: .gitlab/ci/.rules.yaml
  - local: .gitlab/ci/za-itf/ci-ska-mid-itf-commit-ref/.pipeline.yaml
  - local: .gitlab/ci/za-itf/dish-lmc-skaXXX/.pipeline.yaml
  - local: .gitlab/ci/za-itf/ci-ska-mid-sut-skaXXX-commit-ref/.pipeline.yaml
  - local: .gitlab/ci/za-itf/dish-ds-sim-skaXXX/.pipeline.yaml
  - local: .gitlab/ci/za-itf/integration/.pipeline.yaml
  - local: .gitlab/ci/za-itf/spookd/.pipeline.yaml
  - local: .gitlab/ci/za-itf/staging/.pipeline.yaml
  - local: .gitlab/ci/za-itf/taranta/.pipeline.yaml
  - local: .gitlab/ci/za-itf/ci-ska-db-oda-commit-ref/.pipeline.yaml
  - local: .gitlab/ci/za-itf/sdp-data-product-dashboard/.pipeline.yaml
  - local: .gitlab/ci/za-itf/cbf-engineering-console/.pipeline.yaml


xray-publish:
  when: always
  rules: !reference [publish-k8s-test-results, rules]
# python-build-for-publication:
#   rules:
#     - when: never

# python-build-for-development:
#   rules:
#     - when: never

# python-publish-to-gitlab:
#   rules:
#     - when: never

oci-image-build:
  rules:
    - when: never

oci-image-build-testing:
  extends:
    - .image_builder_template
  stage: build
  variables:
    OCI_BUILD_ADDITIONAL_ARGS: "--build-arg GIT_COMMIT_SHA=$(git rev-parse HEAD)"
    OCI_IMAGES: "ska-mid-testing"

docs-build-rtd:
  rules:
    - when: never