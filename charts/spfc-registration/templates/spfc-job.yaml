---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: vault-spfc-secrets
  namespace: {{ .Values.job.namespace }}
spec:
  provider: vault
  secretObjects:
    - secretName: secret
      type: Opaque
      data:
        - objectName: csi-driver
          key: TEST_KEY
        - objectName: injector
          key: injector
  parameters:
    vaultAddress: "https://vault.skao.int"
    roleName: "kube-role"
    objects: |
      - objectName: "csi-driver"
        secretPath: "/v1/kv/data/groups/ska-dev/atlas"
        secretKey: "TEST_KEY"
      - objectName: "injector"
        secretPath: "mid-itf/data/secret"
        secretKey: "injector"
---

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.job.name }}
  namespace: {{ .Values.job.namespace }}
  labels:
    app: {{ .Values.job.name }}

spec:
  template:
    spec:
      containers:
      - name: {{ .Values.job.name }}
        image: {{ .Values.job.image }}
        env:
          - name: SPFC_KEY
            value: {{ .Values.vault.key1 }}
          - name: SPFC_HOST
            value: 10.165.3.33
          #---------------------------secret provider stuff...
          - name: THE_TEST_KEY
            valueFrom:
              secretKeyRef:
                name: secret
                key: TEST_KEY
          - name: THE_SKAO_USER
            valueFrom:
              secretKeyRef:
                name: secret
                key: SKAO_USER
          #--------------------------ends secrets profider stuff...        
        command: ["/bin/bash","-c"]
        args:
          #- echo $(curl 'http://vault-service.default.svc.cluster.local:8080');
          - bash /scripts/register_spfc.sh

        volumeMounts:
        - name: {{ .Values.volume.name }}
          mountPath: {{ .Values.mounts.setupScript.mount }}

        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true

      volumes:
        - name: {{ .Values.volume.name }}
          configMap:
            name: {{ .Values.volume.name }}
        #--------------------secret provider class
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: vault-spfc-secrets

      restartPolicy: Never
  backoffLimit: 6
  suspend: false