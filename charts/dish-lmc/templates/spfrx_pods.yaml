apiVersion: batch/v1
kind: Job
metadata:
  name: spfrx-job
spec:
  backoffLimit: 2
  template:
    metadata:
      labels:
        app: spfrx
    spec:
      volumes:
      - name: {{ .Values.spfrx.local_dir }}
        emptyDir: {}
      containers:
      - name: remote-start
        command:
          [
            "/bin/bash",
            "-c",
            "scripts/spfrx-remote-start.sh $(TANGO_HOSTNAME).$(KUBE_NAMESPACE).svc.$(CLUSTER_DOMAIN):$(TANGO_PORT) $(SPFRX_ADDRESS) $(SPFRX_BIN) $(TANGO_INSTANCE) $(SPFRX_LOGGING_LEVEL) || apt -qq update && apt -qq install tree -y && tree -L 2 && env && false",
          ]
        env:
          - name: TANGO_DB_FQDN
            value: {{ .Values.global.tangodb_fqdn }}
          - name: SPFRX_ADDRESS
            value: {{ .Values.spfrx.address }}
          - name: SPFRX_BIN
            value: {{ .Values.spfrx.bin }}
          - name: SPFRX_TANGO_INSTANCE
            value: {{ .Values.spfrx.instance }}
          - name: SPFRX_TANGO_LOGGING_LEVEL
            value: "{{ .Values.spfrx.logging_level }}"
        image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
        imagePullPolicy: IfNotPresent
        resources:
          limits: 
            miditf/spfrx-20: "1"
            cpu: 750m
            memory: 1024Mi
          requests:
            cpu: 250m
            memory: 500Mi
      restartPolicy: Never
      initContainers:
        - name: check-values
          command: ['sh', '-c']
          args: ["env"]
          env:
            - name: RAW_USER_ACCOUNT
              value: {{ .Values.global.raw_user_account }}
            - name: RAW_USER_PASS
              value: {{ .Values.global.raw_user_pass }}
            - name: TANGO_HOST
              value: {{ .Values.global.tango_host }}
            - name: SPFRX_CONSOLE_VER
              value: {{ .Values.spfrx.console.version }}
            - name: SPFRX_ADDRESS
              value: {{ .Values.spfrx.address }}
            - name: SPFRX_BIN
              value: {{ .Values.spfrx.bin }}
            - name: SPFRX_LOCAL_DIR
              value: {{ .Values.spfrx.local_dir }}
            - name: SPFRX_SCRIPTS_DIR
              value: {{ .Values.spfrx.scripts_dir }}
            - name: DISH_ID
              value: {{ .Values.global.dish_id }}
            - name: CLUSTER_DOMAIN
              value: {{ .Values.global.cluster_domain }}
            - name: TANGO_DB_FQDN
              value: {{ .Values.global.tangodb_fqdn }}
            - name: SPFRX_TANGO_INSTANCE
              value: {{ .Values.spfrx.instance }}
            - name: SPFRX_TANGO_LOGGING_LEVEL
              value: "{{ .Values.spfrx.logging_level }}"
          image: busybox:1.28
          imagePullPolicy: IfNotPresent
        - name: hello
          volumeMounts:
            - name: {{ .Values.spfrx.local_dir }}
              mountPath: "/app/images/ska-mid-dish-spfrx-talondx-console-deploy/{{ .Values.spfrx.local_dir }}"
          command:
            [
              "/bin/bash",
              "-c",
              "python3 spfrx_deployer.py && touch artifacts/testfile && apt -qq update && apt -qq install tree -y && tree -L 2",
            ]
          image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:0.1.0
          imagePullPolicy: IfNotPresent
        - name: check-databaseds-ready
          command: ['sh', '-c']
          args:
            [
              "retry",
              "--max=60",
              "--",
              "tango_admin",
              "--check-device",
              "sys/database/2",
            ]
          env:
          - name: TANGO_HOST
            value: {{ .Values.global.tango_host }}
          image: artefact.skao.int/ska-tango-images-tango-dsconfig:1.5.1
          imagePullPolicy: IfNotPresent
        - name: remote-stop
          command: [
              "/bin/bash",
              "-c",
              "echo remote-stop && env && echo && echo '####################################' && echo 'remember SSH?' && echo '####################################'",
              # TODO: "scripts/spfrx-remote-stop.sh $(SPFRX_ADDRESS) $(SPFRX_BIN) || true",
            ]
          env:
            - name: SPFRX_ADDRESS
              value: {{ .Values.spfrx.address }}
            - name: SPFRX_BIN
              value: {{ .Values.spfrx.bin }}
          image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
          imagePullPolicy: IfNotPresent
        - name: generate-config
          volumeMounts:
            - name: {{ .Values.spfrx.local_dir }}
              mountPath: "/app/images/ska-mid-dish-spfrx-talondx-console-deploy/{{ .Values.spfrx.local_dir }}"
          command:
            [
              "/bin/bash",
              "-c",
              "python3 spfrx_deployer.py --generate-spfrx-config --dish_id=$(DISH_ID) || true && apt -qq update && apt -qq install tree -y && tree -L 2 && env",
            ]
          env:
            - name: DISH_ID
              value: {{ .Values.global.dish_id }}
          image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
          imagePullPolicy: IfNotPresent
        - name: download-artefacts
          volumeMounts:
            - name: {{ .Values.spfrx.local_dir }}
              mountPath: "/app/images/ska-mid-dish-spfrx-talondx-console-deploy/{{ .Values.spfrx.local_dir }}"
          command:
            [
              "/bin/bash",
              "-c",
              "python3 spfrx_deployer.py --download-artifacts --dish_id=$(DISH_ID) || true && apt -qq update && apt -qq install tree -y && tree -L 2 && env",
            ]
          env:
            - name: RAW_USER_ACCOUNT
              value: {{ .Values.global.raw_user_account }}
            - name: RAW_USER_PASS
              value: {{ .Values.global.raw_user_pass }}
            - name: DISH_ID
              value: {{ .Values.global.dish_id }}
          image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
          imagePullPolicy: IfNotPresent
        - name: config-db
          volumeMounts:
            - name: {{ .Values.spfrx.local_dir }}
              mountPath: "/app/images/ska-mid-dish-spfrx-talondx-console-deploy/{{ .Values.spfrx.local_dir }}"
          command:
            [
              "/bin/bash",
              "-c",
              "python3 spfrx_deployer.py --config-db --dish_id=$(DISH_ID) || true && apt -qq update && apt -qq install tree -y && tree -L 2 && env",
            ]
          env:
            - name: DISH_ID
              value: {{ .Values.global.dish_id }}
          image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
          imagePullPolicy: IfNotPresent
        - name: deploy-artefacts
          volumeMounts:
            - name: {{ .Values.spfrx.local_dir }}
              mountPath: "/app/images/ska-mid-dish-spfrx-talondx-console-deploy/{{ .Values.spfrx.local_dir }}"
          command:
            [
              "/bin/bash",
              "-c",
              "scripts/spfrx-deploy-artifacts.sh $(SPFRX_ADDRESS) $(SPFRX_LOCAL_DIR) $(SPFRX_BIN) $(SPFRX_SCRIPTS_DIR) || true && apt -qq update && apt -qq install tree -y && tree -L 2 && env",
            ]
          env:
            - name: SPFRX_ADDRESS
              value: {{ .Values.spfrx.address }}
            - name: SPFRX_BIN
              value: {{ .Values.spfrx.bin }}
            - name: SPFRX_LOCAL_DIR
              value: {{ .Values.spfrx.local_dir }}
            - name: SPFRX_SCRIPTS_DIR
              value: {{ .Values.spfrx.scripts_dir }}
          image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
          imagePullPolicy: IfNotPresent
        - name: program-bitstream
          volumeMounts:
            - name: {{ .Values.spfrx.local_dir }}
              mountPath: "/app/images/ska-mid-dish-spfrx-talondx-console-deploy/{{ .Values.spfrx.local_dir }}"
          command:
            [
              "/bin/bash",
              "-c",
              "scripts/program-bitstream-remote.sh $(SPFRX_LOCAL_DIR) $(SPFRX_ADDRESS) || true && apt -qq update && apt -qq install tree -y && tree -L 2 && env",
            ]
          env:
            - name: SPFRX_ADDRESS
              value: {{ .Values.spfrx.address }}
            - name: SPFRX_LOCAL_DIR
              value: {{ .Values.spfrx.local_dir }}
          image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
          imagePullPolicy: IfNotPresent
