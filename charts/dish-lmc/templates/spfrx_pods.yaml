---
apiVersion: v1
kind: Pod
metadata:
  name: spfrx-deployer
spec:
  containers:
  - name: spfrx-deployer
    command: ["/bin/bash","-c"]
    args: ["tail -f /dev/null"]
    env:
      - name: TANGO_HOST
        value: {{ .Values.global.tango_host }}
    image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
    imagePullPolicy: IfNotPresent
    # resources:
    #   limits: 
    #     miditf/spfrx-20: "1"
  initContainers:
    # TODO: Deploy SPFRx claim service if needed
    # - name: check-spfrx-claim-ready
    #   # command: 
    #   command: ['sh', '-c']
    #   # command: ['sh', '-c', "until nslookup spfrx-claim.$SPFRX_CLAIM_NAMESPACE.svc.$CLUSTER_DOMAIN; do echo waiting for service spfrx-claim; sleep 2; done"]
    #   args: ["echo", "Checking if SPFRx is available"] #delete after testing
    #   # args: 
    #   image: busybox:1.28
    #   imagePullPolicy: IfNotPresent
    - name: check-values
      command: ['sh', '-c']
      args: ["env"]
      env:
        - name: TANGO_HOST
          value: {{ .Values.global.tango_host }}
        - name: SPFRX_CONSOLE_VER
          value: {{ .Values.spfrx.console.version }}
        - name: SPFRX_ADDRESS
          value: {{ .Values.spfrx.address }}
        - name: SPFRX_BIN
          value: {{ .Values.spfrx.bin }}
        - name: SPFRX_LOCAL_DIR
          value: {{ .Values.spfrx.local_dir }}
        - name: SPFRX_SCRIPTS_DIR
          value: {{ .Values.spfrx.scripts_dir }}
        - name: DISH_ID
          value: {{ .Values.global.dishes }}
        - name: CLUSTER_DOMAIN
          value: {{ .Values.global.cluster_domain }}
        - name: TANGO_DB_FQDN
          value: {{ .Values.global.tangodb_fqdn }}
        - name: SPFRX_TANGO_INSTANCE
          value: {{ .Values.spfrx.instance }}
        - name: SPFRX_TANGO_LOGGING_LEVEL
          value: {{ .Values.spfrx.logging_level }}
      image: busybox:1.28
      imagePullPolicy: IfNotPresent
    - name: check-databaseds-ready
      command: ['sh', '-c']
      args: ["retry", "--max=60", "--", "tango_admin", "--check-device", "sys/database/2"]
      env:
      - name: TANGO_HOST
        value: {{ .Values.global.tango_host }}
      image: artefact.skao.int/ska-tango-images-tango-dsconfig:1.5.1
      imagePullPolicy: IfNotPresent
    - name: remote-stop
      # command: 
      command: ["/bin/bash", "echo"] #delete after testing
      args: ["remote-stop"] #delete after testing
      # args: 
      env:
        - name: SPFRX_ADDRESS
          value: {{ .Values.spfrx.address }}
        - name: SPFRX_BIN
          value: {{ .Values.spfrx.bin }}
      image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
      imagePullPolicy: IfNotPresent
    - name: generate-config
      # command: 
      command: ["/bin/bash", "echo"] #delete after testing
      args: ["generate-config"] #delete after testing
      # args: 
      env:
        - name: DISH_ID
          value: {{ .Values.global.dishes }}
      image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
      imagePullPolicy: IfNotPresent
    - name: download-artefacts
      # command: 
      command: ["/bin/bash", "echo"] #delete after testing
      args: ["download-artefacts"] #delete after testing
      # args: 
      env:
        - name: DISH_ID
          value: {{ .Values.global.dishes }}
      image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
      imagePullPolicy: IfNotPresent
    - name: config-db
      # command: 
      command: ["/bin/bash", "echo"] #delete after testing
      args: ["config-db"] #delete after testing
      # args: 
      env:
        - name: DISH_ID
          value: {{ .Values.global.dishes }}
      image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
      imagePullPolicy: IfNotPresent
    - name: deploy-artefacts
      # command: 
      command: ["/bin/bash", "echo"] #delete after testing
      args: ["deploy-artefacts"] #delete after testing
      # args: 
      env:
        - name: SPFRX_ADDRESS
          value: {{ .Values.spfrx.address }}
        - name: SPFRX_BIN
          value: {{ .Values.spfrx.bin }}
        - name: SPFRX_LOCAL_DIR
          value: {{ .Values.spfrx.local_dir }}
        - name: SPFRX_SCRIPTS_DIR
          value: {{ .Values.spfrx.scripts_dir }}
      image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
      imagePullPolicy: IfNotPresent
    - name: program-bitstream
      # command: 
      command: ["/bin/bash", "echo"] #delete after testing
      args: ["program-bitstream"] #delete after testing
      # args: 
      env:
        - name: SPFRX_ADDRESS
          value: {{ .Values.spfrx.address }}
        - name: SPFRX_LOCAL_DIR
          value: {{ .Values.spfrx.local_dir }}
      image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
      imagePullPolicy: IfNotPresent
    - name: remote-start
      # command: 
      command: ["/bin/bash", "echo"] #delete after testing
      args: ["remote-start"] #delete after testing
      # args: 
      env:
        - name: TANGO_DB_FQDN
          value: {{ .Values.global.tangodb_fqdn }}
        - name: SPFRX_ADDRESS
          value: {{ .Values.spfrx.address }}
        - name: SPFRX_BIN
          value: {{ .Values.spfrx.bin }}
        - name: SPFRX_TANGO_INSTANCE
          value: {{ .Values.spfrx.instance }}
        - name: SPFRX_TANGO_LOGGING_LEVEL
          value: {{ .Values.spfrx.logging_level }}
      image: artefact.skao.int/ska-mid-dish-spfrx-talondx-console-deploy:{{ .Values.spfrx.console.version }}
      imagePullPolicy: IfNotPresent
